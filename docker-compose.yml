services:
  minio:
    container_name: minio
    image: minio/minio:latest
    ports:
      - '9000:9000'
      - '9090:9090'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    environment:
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_DEFAULT_BUCKET=inputvideos
    volumes:
      - 'minio_data:/data'
      - ./minio-entrypoint.sh:/usr/bin/minio-entrypoint.sh
    entrypoint: [ "sh", "/usr/bin/minio-entrypoint.sh" ]

  rabbitmq:
    container_name: 'rabbitmq'
    image: rabbitmq:3-management-alpine
    ports:
      - '5672:5672'
      - '15672:15672'
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      timeout: 10s
      retries: 5
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    restart: always

  go-image-processor:
    container_name: 'go-image-processor'
    build:
      context: ./go-image-processor
      dockerfile: Dockerfile
    depends_on:
      minio:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: always
    environment:
      - FFMPEG_BINARY_PATH=ffmpeg
      - MINIO_ENDPOINT=minio:9000
      - MINIO_BUCKET_NAME=inputvideos
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - AMQP_URL=amqp://guest:guest@rabbitmq:5672/
      - API_URL=http://host.docker.internal:3001
      - CACHE_SIZE_GB=10
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G

  backend:
    container_name: 'backend'
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      minio:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - '3001:3001'
    restart: always
    environment:
      - PORT=3001
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_BUCKET_NAME=inputvideos
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - DB_URL=http://database:8080
      - MAX_STORAGE_GB=1

  frontend:
    container_name: 'frontend'
    depends_on:
      - backend
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=https://localhost/api
        - SERVER_API_URL=http://backend:3001
    ports:
      - '3000:3000'
    restart: always

  reverse-proxy:
    container_name: 'reverse-proxy'
    image: caddy:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddyfile.docker:/etc/caddy/Caddyfile
      - ./certs:/etc/caddy/certs

  database:
    container_name: 'database'
    image: ghcr.io/tursodatabase/libsql-server:latest
    ports:
      - '8080:8080'
    volumes:
      - database:/var/lib/sqld

networks:
  default:
    driver: bridge

volumes:
  minio_data:
    driver: local
  database: